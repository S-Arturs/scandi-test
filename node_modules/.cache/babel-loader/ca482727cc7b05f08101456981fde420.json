{"ast":null,"code":"var _jsxFileName = \"/home/arturs/scandi-test/src/component/StepProgressBar/StepProgressBar.component.js\";\n\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport PropTypes from \"prop-types\";\nimport { PureComponent } from \"react\";\nimport \"./StepProgressBar.style\";\n/** #namespace Component/StepProgressBar/Component */\n\nvar _checkBEM = require(\"babel-plugin-transform-rebem-jsx\").checkBEMProps;\n\nexport const StepProgressBar = Mosaic.middleware(class StepProgressBar_ extends Mosaic.Extensible(PureComponent) {\n  renderProgressBar() {\n    var _this = this;\n\n    const {\n      checkoutStep,\n      stepMap\n    } = this.props;\n    let currentIndex = -1;\n    let length = 0;\n    Object.keys(stepMap).map(function () {\n      return length++;\n    });\n    return /*#__PURE__*/_checkBEM(React, \"div\", {\n      className: \"StepProgressBar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }\n    }, Object.keys(stepMap).map(function (key, index) {\n      if (key === checkoutStep) {\n        currentIndex = index;\n      }\n\n      return _this.renderProgressLineAndPoint(key, index, currentIndex, length);\n    }));\n  }\n\n  renderProgressLineAndPoint(key, index, currentIndex, length) {\n    let isCompleted = false;\n\n    if (index <= currentIndex || currentIndex === -1) {\n      isCompleted = true;\n    }\n\n    if (index + 1 === length) return /*#__PURE__*/_checkBEM(React, \"div\", {\n      className: \"FlexWrapperEdge\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }, this.renderProgressLine(isCompleted));\n    if (index === 0) return [/*#__PURE__*/_checkBEM(React, \"div\", {\n      className: \"FlexWrapperEdge\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 10\n      }\n    }, this.renderProgressLine(isCompleted)), /*#__PURE__*/_checkBEM(React, \"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }, this.renderProgressPoint(key, index, currentIndex, length, isCompleted))];\n    return [/*#__PURE__*/_checkBEM(React, \"div\", {\n      className: \"FlexWrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }\n    }, this.renderProgressLine(isCompleted)), /*#__PURE__*/_checkBEM(React, \"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }\n    }, this.renderProgressPoint(key, index, currentIndex, length, isCompleted))];\n  }\n\n  renderProgressLine(isCompleted) {\n    let className = \"ProgressLine\";\n\n    if (isCompleted) {\n      className = \"ProgressLine Completed\";\n    }\n\n    return /*#__PURE__*/_checkBEM(React, \"div\", {\n      className: \"Line\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/_checkBEM(React, \"div\", {\n      className: className,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  renderProgressPoint(key, index, currentIndex, length, isCompleted) {\n    let text = index + 1;\n    let className = \"Circle\";\n    if (index + 1 === length) return null;\n\n    if (index < currentIndex || currentIndex === -1) {\n      text = \"✓\";\n    }\n\n    if (isCompleted) {\n      className = \"Circle Completed\";\n    }\n\n    var lastIndex = this.props.stepMap[key].title.toString().lastIndexOf(\" \");\n    let string = this.props.stepMap[key].title.toString().substring(0, lastIndex);\n    console.log(typeof this.props.stepMap[key].title.toString());\n    return /*#__PURE__*/_checkBEM(React, \"div\", {\n      className: \"PointWrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/_checkBEM(React, \"div\", {\n      className: className,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }\n    }, text), /*#__PURE__*/_checkBEM(React, \"div\", {\n      className: \"PointTextWrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }\n    }, string));\n  }\n\n  render() {\n    console.log(this.props);\n    return /*#__PURE__*/_checkBEM(React, \"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 12\n      }\n    }, this.renderProgressBar());\n  }\n\n}, \"Component/StepProgressBar/Component\");\nexport default StepProgressBar;","map":{"version":3,"sources":["/home/arturs/scandi-test/src/component/StepProgressBar/StepProgressBar.component.js"],"names":["PropTypes","PureComponent","renderProgressBar","checkoutStep","stepMap","props","currentIndex","length","Object","keys","map","key","index","renderProgressLineAndPoint","isCompleted","renderProgressLine","renderProgressPoint","className","text","lastIndex","title","toString","lastIndexOf","string","substring","console","log","render","StepProgressBar"],"mappings":"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","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport PropTypes from \"prop-types\";\nimport { PureComponent } from \"react\";\n\nimport \"./StepProgressBar.style\";\n\n/** @namespace Component/StepProgressBar/Component */\nexport class StepProgressBar extends PureComponent {\n\n  renderProgressBar() {\n    const { checkoutStep, stepMap } = this.props;\n    let currentIndex = -1;\n    let length = 0;\n    Object.keys(stepMap).map(() => length++);\n    return (\n      <div className=\"StepProgressBar\">\n        {Object.keys(stepMap).map((key, index) => {\n          if (key === checkoutStep) {\n            currentIndex = index;\n          }\n          return this.renderProgressLineAndPoint(\n            key,\n            index,\n            currentIndex,\n            length\n          );\n        })}\n      </div>\n    );\n  }\n\n  renderProgressLineAndPoint(key, index, currentIndex, length) {\n    let isCompleted = false;\n    if (index <= currentIndex || currentIndex === -1) {\n      isCompleted = true;\n    }\n    if (index + 1 === length)\n      return (\n        <div className=\"FlexWrapperEdge\">{this.renderProgressLine(isCompleted)}</div>\n      );\n    if (index === 0)\n      return (\n        [<div className=\"FlexWrapperEdge\">{this.renderProgressLine(isCompleted)}</div>,\n        <div>\n        {this.renderProgressPoint(\n          key,\n          index,\n          currentIndex,\n          length,\n          isCompleted\n        )}\n      </div>]\n    );\n    return [\n      <div className=\"FlexWrapper\">{this.renderProgressLine(isCompleted)}</div>,\n      <div>\n        {this.renderProgressPoint(\n          key,\n          index,\n          currentIndex,\n          length,\n          isCompleted\n        )}\n      </div>,\n    ];\n  }\n  renderProgressLine(isCompleted) {\n    let className = \"ProgressLine\";\n    if (isCompleted) {\n      className = \"ProgressLine Completed\";\n    }\n    return (\n      <div className=\"Line\">\n        <div className={className}></div>\n      </div>\n    );\n  }\n  renderProgressPoint(key, index, currentIndex, length, isCompleted) {\n    let text = index + 1;\n    let className = \"Circle\";\n    if (index + 1 === length) return null;\n    if (index < currentIndex || currentIndex === -1) {\n      text = \"✓\";\n    }\n    if (isCompleted) {\n      className = \"Circle Completed\";\n    }\n    var lastIndex = this.props.stepMap[key].title.toString().lastIndexOf(\" \");\n\n    let string = this.props.stepMap[key].title.toString().substring(0, lastIndex);\n    console.log(typeof this.props.stepMap[key].title.toString())\n    return (\n      <div className=\"PointWrapper\">\n        <div className={className}>{text}</div>\n        <div className=\"PointTextWrapper\">\n          {string}\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    console.log(this.props);\n    return <div>{this.renderProgressBar()}</div>;\n  }\n}\n\nexport default StepProgressBar;\n"]},"metadata":{},"sourceType":"module"}