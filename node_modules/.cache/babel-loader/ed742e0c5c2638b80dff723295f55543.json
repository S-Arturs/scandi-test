{"ast":null,"code":"var _class,\n    _temp,\n    _jsxFileName = \"/home/arturs/scandi-test/src/component/StepProgressBar/StepProgressBar.component.js\";\n\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport PropTypes from 'prop-types';\nimport { createRef, PureComponent } from 'react';\nimport { ChildrenType } from \"/home/arturs/scandi-test/src/type/Common\";\nimport CSS from \"/home/arturs/scandi-test/src/util/CSS\";\nimport \"./StepProgressBar.style\";\n/** #namespace Component/StepProgressBar/Component */\n\nvar _checkBEM = require(\"babel-plugin-transform-rebem-jsx\").checkBEMProps;\n\nexport const StepProgressBar = Mosaic.middleware((_temp = _class = class StepProgressBar_ extends Mosaic.Extensible(PureComponent) {\n  // state = {\n  //     activeItemId: 0\n  // };\n  // itemRef = createRef();\n  // carouselRef = createRef();\n  // renderContent() {\n  //     const { children } = this.props;\n  //     return (\n  //         <div block=\"CarouselScroll\" elem=\"ContentWrapper\">\n  //             <div block=\"CarouselScroll\" elem=\"Content\">\n  //                 { children.map(this.renderContentItem) }\n  //             </div>\n  //         </div>\n  //     );\n  // }\n  renderProgressBar() {\n    var _this = this;\n\n    const {\n      checkoutStep,\n      stepMap\n    } = this.props;\n    let wrapperStyle = {\n      display: 'flex',\n      width: '100vw',\n      marginLeft: 'calc(-50vw + 100%)',\n      justifyContent: 'center',\n      top: '-35px'\n    }; // console.log(this.findIndexOfCurrentStep())\n    // const index = Data.map(e => e.name).indexOf('Nick');\n\n    let currentIndex = -1;\n    return /*#__PURE__*/_checkBEM(React, \"div\", {\n      style: wrapperStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 16\n      }\n    }, \" \", Object.keys(stepMap).map(function (key, index) {\n      if (key === checkoutStep) {\n        currentIndex = index;\n      } // console.log(currentIndex)\n\n\n      return _this.renderProgressLineAndPoint(key, index, currentIndex);\n    } // if(key === this.stepMap[checkoutStep]){}\n    // currentIndex = index\n    // this.renderProgressPoint(key, index)\n    ));\n  }\n\n  renderProgressLineAndPoint(key, index, currentIndex) {\n    const lineStyle = {\n      display: 'flex'\n    };\n    return /*#__PURE__*/_checkBEM(React, \"div\", {\n      style: lineStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 16\n      }\n    }, this.renderProgressLine(), this.renderProgressPoint(key, index, currentIndex));\n  }\n\n  renderProgressLine() {\n    const lineStyle = {\n      height: '10px',\n      width: '100px',\n      backgroundColor: 'red',\n      top: '20px'\n    };\n    return /*#__PURE__*/_checkBEM(React, \"div\", {\n      style: lineStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 16\n      }\n    });\n  }\n\n  renderProgressPoint(key, index, currentIndex) {\n    const circleStyle = {\n      height: '50px',\n      width: '50px',\n      backgroundColor: 'red',\n      borderRadius: '50%'\n    };\n    const divStyle = {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      width: '50px'\n    };\n    let text = index + 1;\n\n    if (index < currentIndex || currentIndex === -1) {\n      text = \"+\";\n    }\n\n    return /*#__PURE__*/_checkBEM(React, \"div\", {\n      style: divStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/_checkBEM(React, \"div\", {\n      style: circleStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }\n    }, text), /*#__PURE__*/_checkBEM(React, \"div\", {\n      style: {\n        position: 'relative'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }\n    }, this.props.stepMap[key].title));\n  }\n\n  render() {\n    console.log(this.props);\n    return /*#__PURE__*/_checkBEM(React, \"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }\n    }, this.renderProgressBar()) // <div block=\"CarouselScroll\" ref={ this.carouselRef }>\n    //     { this.renderArrow() }\n    //     { this.renderContent() }\n    //     { this.renderArrow(true) }\n    // </div>\n    ;\n  }\n\n}, _class.propTypes = {// children: ChildrenType.isRequired,\n  // showArrow: PropTypes.bool,\n  // showedItemCount: PropTypes.number,\n  // showedActiveItemNr: PropTypes.number,\n  // onChange: PropTypes.func,\n  // activeItemId: PropTypes.number\n}, _class.defaultProps = {// showArrow: true,\n  // showedItemCount: 1,\n  // showedActiveItemNr: 2,\n  // onChange: () => {},\n  // activeItemId: null\n}, _temp), \"Component/StepProgressBar/Component\");\nexport default StepProgressBar;","map":{"version":3,"sources":["/home/arturs/scandi-test/src/component/StepProgressBar/StepProgressBar.component.js"],"names":["PropTypes","createRef","PureComponent","ChildrenType","CSS","renderProgressBar","checkoutStep","stepMap","props","wrapperStyle","display","width","marginLeft","justifyContent","top","currentIndex","Object","keys","map","key","index","renderProgressLineAndPoint","lineStyle","renderProgressLine","renderProgressPoint","height","backgroundColor","circleStyle","borderRadius","divStyle","flexDirection","alignItems","text","position","title","render","console","log","propTypes","defaultProps","StepProgressBar"],"mappings":"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","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport PropTypes from 'prop-types';\nimport { createRef, PureComponent } from 'react';\nimport { ChildrenType } from 'Type/Common';\nimport CSS from 'Util/CSS';\n\nimport './StepProgressBar.style';\n\n/** @namespace Component/StepProgressBar/Component */\nexport class StepProgressBar extends PureComponent {\n    static propTypes = {\n        // children: ChildrenType.isRequired,\n        // showArrow: PropTypes.bool,\n        // showedItemCount: PropTypes.number,\n        // showedActiveItemNr: PropTypes.number,\n        // onChange: PropTypes.func,\n        // activeItemId: PropTypes.number\n    };\n\n    static defaultProps = {\n        // showArrow: true,\n        // showedItemCount: 1,\n        // showedActiveItemNr: 2,\n        // onChange: () => {},\n        // activeItemId: null\n    };\n\n    // state = {\n    //     activeItemId: 0\n    // };\n\n    // itemRef = createRef();\n\n    // carouselRef = createRef();\n\n    // renderContent() {\n    //     const { children } = this.props;\n\n    //     return (\n    //         <div block=\"CarouselScroll\" elem=\"ContentWrapper\">\n    //             <div block=\"CarouselScroll\" elem=\"Content\">\n    //                 { children.map(this.renderContentItem) }\n    //             </div>\n    //         </div>\n    //     );\n    // }\n\n\n    renderProgressBar() {\n        const {\n            checkoutStep,\n            stepMap\n        } = this.props;\n        let wrapperStyle = {display: 'flex', width:'100vw', marginLeft: 'calc(-50vw + 100%)', justifyContent:'center', top:'-35px'}\n        // console.log(this.findIndexOfCurrentStep())\n        // const index = Data.map(e => e.name).indexOf('Nick');\n        let currentIndex = -1;\n        return <div style = {wrapperStyle}> {Object.keys(stepMap).map((key, index )=> {\n            if(key === checkoutStep){\n            currentIndex = index\n        }   \n        // console.log(currentIndex)\n            return  this.renderProgressLineAndPoint(key, index, currentIndex)\n            \n        }\n            // if(key === this.stepMap[checkoutStep]){}\n            // currentIndex = index\n            // this.renderProgressPoint(key, index)\n        \n        )}\n        </div>\n        \n    }\n\n    renderProgressLineAndPoint(key, index, currentIndex){\n        const lineStyle = {display: 'flex'}\n        return <div style={lineStyle}>{this.renderProgressLine()}{this.renderProgressPoint(key, index, currentIndex)}</div>\n    }\n    renderProgressLine(){\n        const lineStyle = {height: '10px', width: '100px', backgroundColor: 'red', top: '20px'}\n        return <div style={lineStyle}></div>\n    }\n    renderProgressPoint(key, index, currentIndex) {\n        const circleStyle = {height: '50px', width: '50px', backgroundColor: 'red', borderRadius: '50%'}\n        const divStyle = {display: 'flex', flexDirection: 'column', alignItems: 'center', width: '50px'}\n        let text = index + 1\n        if(index < currentIndex || currentIndex === -1){\n            text = \"+\"\n        }\n        return <div style={divStyle}>\n            {/* {this.stepMap} */}\n\n            <div style={circleStyle}>{\n            text}</div>\n            <div style={{position:'relative'}}>\n            {\n            this.props.stepMap[key].title\n            }\n            </div>\n            </div>\n    }\n\n\n    render() {\n        console.log(this.props)\n        return (\n            <div>\n                {this.renderProgressBar()}\n            </div>\n            // <div block=\"CarouselScroll\" ref={ this.carouselRef }>\n            //     { this.renderArrow() }\n            //     { this.renderContent() }\n            //     { this.renderArrow(true) }\n            // </div>\n        );\n    }\n}\n\nexport default StepProgressBar;\n"]},"metadata":{},"sourceType":"module"}